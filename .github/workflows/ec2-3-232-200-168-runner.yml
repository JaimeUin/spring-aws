# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# name: Jaime Lagos
# documentation.

name: Pipeline Java CI with Maven

on:
  push:
    branches: [ "development" ]

jobs:
    build:
      runs-on: self-hosted
      steps:
      - uses: actions/checkout@v3
      - name: update apt
        run:  sudo apt update
      - name: install java && maven
        run:  sudo apt install maven openjdk-17-jre openjdk-17-jdk
      #- name: install node
      #  run:  sudo apt-get install nodejs
      #- name: install npm
      #  run:  sudo apt install npm
      #- name: install pm2
      #  run:  sudo npm install pm2 -g
      #- name: install pm2 2
      #  run:  sudo pm2 completion install
      # first check verification
      - name: where i am?
        run:  sudo pwd
      - name: what i found?
        run:  sudo ls -all

        # - uses: actions/checkout@v3
     # - name: Set up JDK 17
     #   uses: actions/setup-java@v3
     #   with:
     #     java-version: '17'
     #     distribution: 'temurin'
     #     cache: maven
     # - name: Build with Maven
     #   run: ./mvnw -X -B package --file pom.xml

      - name: Build with Maven
        run:  ./mvnw -X -B package --file pom.xml

      - name: meter un validador de puerto 80d
        run:  sudo kill -9 ${ sudo lsof -t -i:80 }


      #- name: install node
       # run: sudo apt-get install nodejs

      #- name: install npm
      #  run: sudo apt install npm

      #- name: install pm2
      #  run: sudo npm install pm2 -g
      #- name: install pm2 2
      #  run: sudo pm2 completion install
      #- name: install pm2 3
      #  run: pm2 update

  # its working
    #  - name: directions
     #   run: |
      #    sudo pwd
       #   sudo ls -all
      # sudo sh -c "cd target"

  # two check verification
      - name: where i am?
        run:  sudo pwd
      - name: what i found?
        run:  sudo ls -all

  # validate again if is starting with pm2
      - name: up with pm2 springboot
        run:  sudo java -jar target/spring-aws-0.0.1-SNAPSHOT.jar
      #  run:  sudo pm2 start npm -name "spring-aws2" -- -jar target/spring-aws-0.0.1-SNAPSHOT.jar

  # three check verification
      - name: where i am?
        run:  sudo pwd
      - name: what i found?
        run:  sudo ls -all

        # antes debejs intalar node
        # antes debejs intalar npm
        # antes debejs intalar pm2
        # esto de abajo se reemplaza ejecutando un archivo .sh para levantar la app mediante pm2
        # - name: Execute Jar File
        #  run: sudo kill -9 `sudo lsof -t -i:80` & sudo java -jar /home/ubuntu/actions-runner/_work/spring-aws/spring-aws/target/spring-aws-0.0.1-SNAPSHOT.jar
