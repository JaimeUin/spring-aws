# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "development" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: ./mvnw -X -B package --file pom.xml

    - name: killing port 80
      run: sudo kill -9 `sudo lsof -t -i:80

    - name: install node
      run: sudo apt-get install nodejs

    - name: install npm
      run: sudo apt install npm

    - name: install pm2
      run: sudo npm install pm2 -g
    - name: install pm2 2
      run: sudo pm2 completion install
    - name: install pm2 3
      run: pm2 update
    - name: up with pm2 springboot
      run: pm2 start java -- -jar spring-aws/target/spring-aws-0.0.1-SNAPSHOT.jar

      # antes debejs intalar node
      # antes debejs intalar npm
      # antes debejs intalar pm2
      # esto de abajo se reemplaza ejecutando un archivo .sh para levantar la app mediante pm2
      # - name: Execute Jar File
      #  run: sudo kill -9 `sudo lsof -t -i:80` & sudo java -jar /home/ubuntu/actions-runner/_work/spring-aws/spring-aws/target/spring-aws-0.0.1-SNAPSHOT.jar